# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  modulesPath,
  ...
}:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.kernelParams = [ "nvidia_drm.fbdev=0" ];
  boot.initrd.availableKernelModules = [
    "xhci_pci"
    "ahci"
    "nvme"
    "usbhid"
    "usb_storage"
    "sd_mod"
  ];
  boot.initrd.kernelModules = [ "dm-snapshot" ];
  boot.initrd.luks.devices.cryptroot.device =
    "/dev/disk/by-uuid/96a6496f-f92f-46ed-ae37-6bf5cd08daa9";
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/3decf51c-b486-4f9b-99e7-3a81c33ab28d";
    fsType = "ext4";
  };

  fileSystems."/mnt/ssd" = {
    device = "/dev/mapper/ssd";
    fsType = "ext4";
    options = [ "nofail" ];
  };

  fileSystems."/mnt/nvme" = {
    device = "/dev/mapper/nvme";
    fsType = "ext4";
    options = [ "nofail" ];
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/A407-59CC";
    fsType = "vfat";
    options = [
      "fmask=0022"
      "dmask=0022"
    ];
  };

  environment.etc.crypttab = {
    mode = "0600";
    text = ''
      nvme UUID=8d760c9e-ddcc-464a-a0f6-2cf7fb1dc133 /root/drive.key
      ssd UUID=b23a17d2-1c8b-4b69-8a71-3460531c34b1 /root/drive.key
    '';
  };

  swapDevices = lib.mkForce [ ];
  #swapDevices = [{
  #  device = "/swapfile";
  #  size = 16 * 1024;
  #}];

  services.xserver.videoDrivers = [ "nvidia" ];

  hardware.nvidia = {
    package = config.boot.kernelPackages.nvidiaPackages.stable;
    modesetting.enable = true;
    nvidiaSettings = true;
    open = false;
  };

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s31f6.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp3s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
